// <auto-generated />
using System;
using Hotel.Intranet.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hotel.Intranet.Migrations
{
    [DbContext(typeof(HotelIntranetContext))]
    [Migration("20250507190726_AddHomePageMigration")]
    partial class AddHomePageMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HomePage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BannerIdMedia")
                        .HasColumnType("int");

                    b.Property<int?>("GrafikaIdMedia")
                        .HasColumnType("int");

                    b.Property<string>("Naglowek")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tagi")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("BannerIdMedia");

                    b.HasIndex("GrafikaIdMedia");

                    b.ToTable("HomePage");
                });

            modelBuilder.Entity("Hotel.Intranet.Models.Intranet.Messages", b =>
                {
                    b.Property<int>("IdWiadomosci")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdWiadomosci"));

                    b.Property<DateTime>("DataWyslania")
                        .HasColumnType("datetime2");

                    b.Property<int>("NadawcaId")
                        .HasColumnType("int");

                    b.Property<int>("OdbiorcaId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Temat")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Tresc")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserIdUzytkownika")
                        .HasColumnType("int");

                    b.Property<int?>("UserIdUzytkownika1")
                        .HasColumnType("int");

                    b.HasKey("IdWiadomosci");

                    b.HasIndex("UserIdUzytkownika");

                    b.HasIndex("UserIdUzytkownika1");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Hotel.PortalWWW.Models.Atractions.Atraction", b =>
                {
                    b.Property<int>("IdAtrakcji")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAtrakcji"));

                    b.Property<decimal>("Cena")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("HomePageId")
                        .HasColumnType("int");

                    b.Property<int?>("MediaIdMedia")
                        .HasColumnType("int");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdAtrakcji");

                    b.HasIndex("HomePageId");

                    b.HasIndex("MediaIdMedia");

                    b.ToTable("Atraction");
                });

            modelBuilder.Entity("Hotel.PortalWWW.Models.CMS.Page", b =>
                {
                    b.Property<int>("IdStrony")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStrony"));

                    b.Property<string>("LinkTytul")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Pozycja")
                        .HasColumnType("int");

                    b.Property<string>("Tresc")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tytul")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdStrony");

                    b.ToTable("Page");
                });

            modelBuilder.Entity("Hotel.PortalWWW.Models.Rooms.Room", b =>
                {
                    b.Property<int>("IdPokoju")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPokoju"));

                    b.Property<decimal>("Cena")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("HomePageId")
                        .HasColumnType("int");

                    b.Property<int>("LiczbaOsob")
                        .HasColumnType("int");

                    b.Property<int?>("MediaIdMedia")
                        .HasColumnType("int");

                    b.Property<int>("Numer")
                        .HasColumnType("int");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Typ")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdPokoju");

                    b.HasIndex("HomePageId");

                    b.HasIndex("MediaIdMedia");

                    b.ToTable("Room");
                });

            modelBuilder.Entity("Media", b =>
                {
                    b.Property<int>("IdMedia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMedia"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("PageIdStrony")
                        .HasColumnType("int");

                    b.Property<string>("RelatedObjectType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdMedia");

                    b.HasIndex("PageIdStrony");

                    b.ToTable("Media");
                });

            modelBuilder.Entity("Reservation", b =>
                {
                    b.Property<int>("IdRezerwacji")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRezerwacji"));

                    b.Property<DateTime>("DataRozpoczecia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataZakonczenia")
                        .HasColumnType("datetime2");

                    b.Property<string>("TypRezerwacji")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UserIdUzytkownika")
                        .HasColumnType("int");

                    b.Property<int>("UzytkownikId")
                        .HasColumnType("int");

                    b.HasKey("IdRezerwacji");

                    b.HasIndex("UserIdUzytkownika");

                    b.ToTable("Reservation");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Property<int>("IdUzytkownika")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUzytkownika"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Haslo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Rola")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUzytkownika");

                    b.ToTable("User");
                });

            modelBuilder.Entity("HomePage", b =>
                {
                    b.HasOne("Media", "Banner")
                        .WithMany()
                        .HasForeignKey("BannerIdMedia");

                    b.HasOne("Media", "Grafika")
                        .WithMany()
                        .HasForeignKey("GrafikaIdMedia");

                    b.Navigation("Banner");

                    b.Navigation("Grafika");
                });

            modelBuilder.Entity("Hotel.Intranet.Models.Intranet.Messages", b =>
                {
                    b.HasOne("User", null)
                        .WithMany("WiadomosciOdebrane")
                        .HasForeignKey("UserIdUzytkownika");

                    b.HasOne("User", null)
                        .WithMany("WiadomosciWyslane")
                        .HasForeignKey("UserIdUzytkownika1");
                });

            modelBuilder.Entity("Hotel.PortalWWW.Models.Atractions.Atraction", b =>
                {
                    b.HasOne("HomePage", null)
                        .WithMany("Atrakcje")
                        .HasForeignKey("HomePageId");

                    b.HasOne("Media", "Media")
                        .WithMany("Atractions")
                        .HasForeignKey("MediaIdMedia");

                    b.Navigation("Media");
                });

            modelBuilder.Entity("Hotel.PortalWWW.Models.Rooms.Room", b =>
                {
                    b.HasOne("HomePage", null)
                        .WithMany("Pokoje")
                        .HasForeignKey("HomePageId");

                    b.HasOne("Media", "Media")
                        .WithMany("Rooms")
                        .HasForeignKey("MediaIdMedia");

                    b.Navigation("Media");
                });

            modelBuilder.Entity("Media", b =>
                {
                    b.HasOne("Hotel.PortalWWW.Models.CMS.Page", null)
                        .WithMany("MediaFiles")
                        .HasForeignKey("PageIdStrony");
                });

            modelBuilder.Entity("Reservation", b =>
                {
                    b.HasOne("User", null)
                        .WithMany("Rezerwacje")
                        .HasForeignKey("UserIdUzytkownika");
                });

            modelBuilder.Entity("HomePage", b =>
                {
                    b.Navigation("Atrakcje");

                    b.Navigation("Pokoje");
                });

            modelBuilder.Entity("Hotel.PortalWWW.Models.CMS.Page", b =>
                {
                    b.Navigation("MediaFiles");
                });

            modelBuilder.Entity("Media", b =>
                {
                    b.Navigation("Atractions");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Navigation("Rezerwacje");

                    b.Navigation("WiadomosciOdebrane");

                    b.Navigation("WiadomosciWyslane");
                });
#pragma warning restore 612, 618
        }
    }
}
