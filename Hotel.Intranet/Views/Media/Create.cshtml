@model Media

@{
    ViewData["Title"] = "Dodaj media";
}

<div class="container mt-4">
    <div class="card shadow-sm">
        <div class="card-header bg-dark text-white">
            <h4 class="mb-0">Dodaj media</h4>
        </div>
        <div class="card-body">
            <form asp-action="Create">
                <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>
                


                <div class="mb-3">
                    <label asp-for="RelatedObjectType" class="form-label font-weight-bold"></label>
                    <select asp-for="RelatedObjectType" class="form-control" id="relatedObjectType">
                        <option value="">-- Wybierz typ --</option>
                        <option value="attractions">Atrakcje</option>
                        <option value="banners">Bannery</option>
                        <option value="rooms">Pokoje</option>
                        <option value="misc">Inne</option>
                    </select>
                    <span asp-validation-for="RelatedObjectType" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label class="form-label font-weight-bold">Wybierz grafikę</label>
                    <div class="row" id="mediaGallery"></div>
                    <input type="hidden" asp-for="FilePath" id="FilePath" />
                    <span asp-validation-for="FilePath" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="FileName" class="form-label font-weight-bold"></label>
                    <input asp-for="FileName" class="form-control" />
                    <span asp-validation-for="FileName" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="FileType" class="form-label font-weight-bold"></label>
                    <input asp-for="FileType" class="form-control" disabled/>
                    <span asp-validation-for="FileType" class="text-danger"></span>
                </div>
                <div class="text-end">
                    <input type="submit" value="Dodaj" class="btn btn-primary me-2" />
                    <a asp-action="Index" class="btn btn-secondary">⬅ Powrót do listy</a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        document.getElementById('relatedObjectType').addEventListener('change', function () {
            const selectedType = this.value;
            const gallery = document.getElementById('mediaGallery');
            const filePathInput = document.getElementById('FilePath');
            const fileNameInput = document.getElementById('FileName');
            const fileTypeInput = document.getElementById('FileType');

            gallery.innerHTML = '';
            filePathInput.value = '';
            fileNameInput.value = '';
            fileTypeInput.value = '';

            if (selectedType) {
                fetch(`/Media/GetFilesByType?type=${selectedType}`)
                    .then(response => response.json())
                    .then(data => {
                        data.forEach(file => {
                            const col = document.createElement('div');
                            col.className = 'col-md-3 mb-3';

                            const img = document.createElement('img');
                            img.src = `/content/media/${selectedType}/${file}`;
                            img.className = 'img-thumbnail media-thumb';
                            img.style.cursor = 'pointer';
                            img.dataset.file = file;

                            img.addEventListener('click', function () {

                                document.querySelectorAll('.media-thumb').forEach(i => {
                                    i.classList.remove('border-primary', 'border-3');
                                });
                                this.classList.add('border-primary', 'border-3');

                                const selectedFile = this.dataset.file;
                                const fullPath = `/content/media/${selectedType}/${selectedFile}`;

                                filePathInput.value = selectedFile;
                                fileNameInput.value = selectedFile.substring(0, selectedFile.lastIndexOf('.')) || selectedFile;


                                fetch(fullPath, { method: 'HEAD' })
                                    .then(res => {
                                        const type = res.headers.get('Content-Type');
                                        fileTypeInput.value = type || '';
                                    })
                                    .catch(err => {
                                        console.error('Błąd pobierania typu MIME:', err);
                                        fileTypeInput.value = '';
                                    });
                            });

                            col.appendChild(img);
                            gallery.appendChild(col);
                        });
                    })
                    .catch(error => console.error('Błąd przy ładowaniu plików:', error));
            }
        });
    </script>

}
